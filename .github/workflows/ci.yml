# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

###############################################################################
# 1. Plasma‑6 widget
###############################################################################
jobs:
  widget:
    name: Plasma Widget
    runs-on: ubuntu-latest
    container:
      image: debian:sid # KF6 & Qt 6 are already here
    env:
      DEBIAN_FRONTEND: noninteractive
      DESTDIR: ${{ github.workspace }}/artifacts
    steps:
      - uses: actions/checkout@v4

      - name: Install validation tools
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            jq \
            findutils \
            tar

      - name: Validate plasmoid structure
        run: |
          # Check that required files exist
          test -f plasmoid/metadata.json
          test -f plasmoid/contents/ui/main.qml

          # Validate metadata.json
          jq . plasmoid/metadata.json

          # List all QML files
          find plasmoid -name "*.qml" -type f

      - name: Package plasmoid
        run: |
          mkdir -p "$DESTDIR"
          cp -r plasmoid "$DESTDIR/org.kairpods.plasma"
          cd "$DESTDIR"
          tar -czf kairpods-plasmoid.tar.gz org.kairpods.plasma

      - uses: actions/upload-artifact@v4
        with:
          name: plasmoid
          path: artifacts/kairpods-plasmoid.tar.gz

  ###############################################################################
  # 2. Rust background service
  ###############################################################################
  rust:
    name: Rust Service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            libdbus-1-dev \
            libbluetooth-dev

      - name: Pin Rust version for CI
        run: |
          echo '[toolchain]' > rust-toolchain.toml
          echo 'channel = "1.88.0"' >> rust-toolchain.toml
          echo 'components = ["rustfmt", "clippy"]' >> rust-toolchain.toml

      - name: Rust toolchain
        uses: dtolnay/rust-toolchain@1.88.0
        with:
          components: clippy, rustfmt

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            service/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('service/Cargo.lock') }}

      - name: rustfmt
        working-directory: service
        run: cargo fmt --all -- --check

      - name: clippy
        working-directory: service
        run: cargo clippy -- -D warnings

      - name: tests
        working-directory: service
        run: cargo test --verbose

      - name: build (release)
        working-directory: service
        run: cargo build --release --verbose

  ###############################################################################
  # 3. Static validation of project layout
  ###############################################################################
  validate:
    name: Validate Plasmoid Layout
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check required files & perms
        run: |
          set -euo pipefail
          test -f plasmoid/metadata.json
          test -f plasmoid/contents/ui/main.qml
          jq . plasmoid/metadata.json >/dev/null
          for f in scripts/install.sh scripts/get.sh; do
            [ -x "$f" ] || { echo "$f must be +x"; exit 1; }
          done
